{"ast":null,"code":"var _jsxFileName = \"/Users/Marta/Desktop/cosmovisor-test/src/VideoGallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './VideoGallery.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoGallery() {\n  _s();\n  var _selectedVideo$videoL;\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [currentVideoUrl, setCurrentVideoUrl] = useState('');\n  useEffect(() => {\n    // Para buscar videos\n    fetch('https://images-api.nasa.gov/search?q=4k&media_type=video').then(response => response.json()).then(data => {\n      console.log(data); // Para inspeccionar la estructura de los datos\n      if (data.collection && data.collection.items) {\n        const items = data.collection.items;\n\n        // Fetch asset details for each video to get the correct video URLs\n        const fetchVideoDetails = items.map(item => {\n          const nasaId = item.data[0].nasa_id;\n          return fetch(`https://images-api.nasa.gov/asset/${nasaId}`).then(response => response.json()).then(assetData => {\n            const videoLinks = assetData.collection.items.filter(assetItem => assetItem.href.endsWith('.mp4') || assetItem.href.endsWith('.mov') || assetItem.href.endsWith('.avi') || assetItem.href.endsWith('.mkv'));\n            return {\n              ...item,\n              videoLinks\n            };\n          });\n        });\n        Promise.all(fetchVideoDetails).then(validVideos => {\n          const filteredVideos = validVideos.filter(video => video.videoLinks.length > 0);\n          setVideos(filteredVideos);\n          if (filteredVideos.length > 0) {\n            setSelectedVideo(filteredVideos[0]);\n          }\n          setLoading(false);\n        });\n      } else {\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.error(\"Error al obtener los videos:\", error);\n      setLoading(false);\n    });\n  }, []);\n  const handleVideoSelect = video => {\n    var _video$videoLinks, _video$videoLinks$;\n    setSelectedVideo(video);\n    if (video !== null && video !== void 0 && (_video$videoLinks = video.videoLinks) !== null && _video$videoLinks !== void 0 && (_video$videoLinks$ = _video$videoLinks[0]) !== null && _video$videoLinks$ !== void 0 && _video$videoLinks$.href) {\n      setCurrentVideoUrl(video.videoLinks[0].href);\n    }\n  };\n  useEffect(() => {\n    console.log(\"Selected video updated:\", selectedVideo);\n  }, [selectedVideo]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando videos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  if (videos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No se encontraron videos en 4K reproducibles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Datos del video seleccionado\n  const selectedData = selectedVideo === null || selectedVideo === void 0 ? void 0 : selectedVideo.data[0];\n  const selectedVideoLink = (selectedVideo === null || selectedVideo === void 0 ? void 0 : (_selectedVideo$videoL = selectedVideo.videoLinks[0]) === null || _selectedVideo$videoL === void 0 ? void 0 : _selectedVideo$videoL.href) || '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-gallery\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Videos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-display\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-selected\",\n        children: [currentVideoUrl ? /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          width: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: currentVideoUrl,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), \"Tu navegador no soporta el elemento video.\"]\n        }, currentVideoUrl, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No se encontr\\xF3 el video seleccionado.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), selectedData && /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-slider\",\n      children: videos.map((video, index) => {\n        var _video$videoLinks$2;\n        const data = video.data[0];\n        const videoLink = ((_video$videoLinks$2 = video.videoLinks[0]) === null || _video$videoLinks$2 === void 0 ? void 0 : _video$videoLinks$2.href) || '';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `slider-item ${selectedVideo === video ? 'active' : ''}`,\n          onClick: () => handleVideoSelect(video),\n          children: [videoLink ? /*#__PURE__*/_jsxDEV(\"video\", {\n            muted: true,\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: videoLink,\n              type: \"video/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), \"Tu navegador no soporta el elemento video.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoGallery, \"oYQmIYR14r3G3Zg44hIgiPWHbKc=\");\n_c = VideoGallery;\nexport default VideoGallery;\nvar _c;\n$RefreshReg$(_c, \"VideoGallery\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","VideoGallery","_s","_selectedVideo$videoL","videos","setVideos","selectedVideo","setSelectedVideo","loading","setLoading","currentVideoUrl","setCurrentVideoUrl","fetch","then","response","json","data","console","log","collection","items","fetchVideoDetails","map","item","nasaId","nasa_id","assetData","videoLinks","filter","assetItem","href","endsWith","Promise","all","validVideos","filteredVideos","video","length","catch","error","handleVideoSelect","_video$videoLinks","_video$videoLinks$","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedData","selectedVideoLink","className","controls","width","src","type","title","index","_video$videoLinks$2","videoLink","onClick","muted","_c","$RefreshReg$"],"sources":["/Users/Marta/Desktop/cosmovisor-test/src/VideoGallery.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './VideoGallery.css';\n\nfunction VideoGallery() {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [currentVideoUrl, setCurrentVideoUrl] = useState('');\n\n\n  useEffect(() => {\n    // Para buscar videos\n    fetch('https://images-api.nasa.gov/search?q=4k&media_type=video')\n      .then(response => response.json())\n      .then(data => {\n        console.log(data); // Para inspeccionar la estructura de los datos\n        if (data.collection && data.collection.items) {\n          const items = data.collection.items;\n\n          // Fetch asset details for each video to get the correct video URLs\n          const fetchVideoDetails = items.map(item => {\n            const nasaId = item.data[0].nasa_id;\n            return fetch(`https://images-api.nasa.gov/asset/${nasaId}`)\n              .then(response => response.json())\n              .then(assetData => {\n                const videoLinks = assetData.collection.items.filter(assetItem => \n                  assetItem.href.endsWith('.mp4') || \n                  assetItem.href.endsWith('.mov') || \n                  assetItem.href.endsWith('.avi') || \n                  assetItem.href.endsWith('.mkv')\n                );\n                return {\n                  ...item,\n                  videoLinks\n                };\n              });\n          });\n\n          Promise.all(fetchVideoDetails).then(validVideos => {\n            const filteredVideos = validVideos.filter(video => video.videoLinks.length > 0);\n            setVideos(filteredVideos);\n            if (filteredVideos.length > 0) {\n              setSelectedVideo(filteredVideos[0]);\n            }\n            setLoading(false);\n          });\n        } else {\n          setLoading(false);\n        }\n      })\n      .catch(error => {\n        console.error(\"Error al obtener los videos:\", error);\n        setLoading(false);\n      });\n  }, []);\n\n  const handleVideoSelect = (video) => {\n    setSelectedVideo(video);\n    if (video?.videoLinks?.[0]?.href) {\n      setCurrentVideoUrl(video.videoLinks[0].href);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Selected video updated:\", selectedVideo);\n  }, [selectedVideo]);\n\n  if (loading) {\n    return <div>Cargando videos...</div>;\n  }\n\n  if (videos.length === 0) {\n    return <div>No se encontraron videos en 4K reproducibles.</div>;\n  }\n\n  // Datos del video seleccionado\n  const selectedData = selectedVideo?.data[0];\n  const selectedVideoLink = selectedVideo?.videoLinks[0]?.href || '';\n\n  return (\n    <div className=\"video-gallery\">\n      <h2>Videos</h2>\n      <div className=\"video-display\">\n        <div className=\"video-selected\">\n          {currentVideoUrl ? (\n            <video controls width=\"100%\" key={currentVideoUrl}>\n              <source src={currentVideoUrl} type=\"video/mp4\" />\n              Tu navegador no soporta el elemento video.\n            </video>\n          ) : (\n            <p>No se encontró el video seleccionado.</p>\n          )}\n          {selectedData && <h3>{selectedData.title}</h3>}\n        </div>\n      </div>\n      <div className=\"video-slider\">\n        {videos.map((video, index) => {\n          const data = video.data[0];\n          const videoLink = video.videoLinks[0]?.href || '';\n          return (\n            <div\n              key={index}\n              className={`slider-item ${selectedVideo === video ? 'active' : ''}`}\n              onClick={() => handleVideoSelect(video)}\n            >\n              {videoLink ? (\n                <video muted>\n                  <source src={videoLink} type=\"video/mp4\" />\n                  Tu navegador no soporta el elemento video.\n                </video>\n              ) : (\n                <p>No video</p>\n              )}\n              <p>{data.title}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default VideoGallery;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}